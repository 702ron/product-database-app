// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  email       String   @unique
  passwordHash String
  role        Role
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  products    Product[]
}

enum Role {
  ADMIN
  EDITOR
  VIEWER
}

model Product {
  id           String         @id @default(uuid())
  productName  String
  lotNumber    String
  truckNumber  String
  source       String
  upc          String
  asin         String?
  link         String?
  condition    Condition
  damaged      Boolean
  missingItems Boolean
  whatsMissing String?
  notes        String?
  mixedId      String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  images       ProductImage[]
  userId       String?
  user         User?         @relation(fields: [userId], references: [id])
}

enum Condition {
  NEW
  USED
  PARTS_ONLY
}

model ProductImage {
  id         String   @id @default(uuid())
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  type       ImageType
  path       String
  fileName   String
  mimeType   String
  size       Int
  isVisible  Boolean
  uploadedAt DateTime @default(now())
}

enum ImageType {
  STOCK
  MAIN
  BOX
  OTHER_1
  DAMAGE_1
  DAMAGE_2
}
